plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
	id "com.github.node-gradle.node" version '7.0.2'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.apache.commons:commons-lang3'
	annotationProcessor "org.mapstruct:mapstruct-processor:1.6.2"
	implementation "org.mapstruct:mapstruct:1.6.2"
	implementation "org.springframework.boot:spring-boot-starter-thymeleaf"
	implementation "org.springframework.boot:spring-boot-starter-mail"
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'
	implementation 'org.liquibase:liquibase-core'
	testImplementation "org.testcontainers:jdbc"
	testImplementation "org.testcontainers:junit-jupiter"
	testImplementation "org.testcontainers:testcontainers"
	testImplementation "org.testcontainers:postgresql"
	implementation 'com.google.zxing:core:3.5.3'
	implementation 'com.google.zxing:javase:3.5.3'
	implementation 'commons-io:commons-io:2.17.0'
	implementation 'com.github.spotbugs:spotbugs-annotations:4.8.6'
}

ext {
	springProfiles = ""
	if (project.hasProperty("tls")) {
		springProfiles += ",tls"
	}
	if (project.hasProperty("e2e")) {
		springProfiles += ",e2e"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

if (project.hasProperty("prod")) {
	apply from: "gradle/profile_prod.gradle"
} else {
	apply from: "gradle/profile_dev.gradle"
}

if (project.hasProperty("war")) {
	apply from: "gradle/war.gradle"
}

if (project.hasProperty("nodeInstall")) {
	node {
		version = "20.17.0"
		npmVersion = "10.8.3"
		download = true
	}

	// Copy local node and npm to a fixed location for npmw
	def deleteOldNpm = tasks.register("deleteOldNpm", Delete) {
		delete 'build/node/lib/node_modules/npm'
	}
	def fixedNode = tasks.register("fixedNode", Copy) {
		from nodeSetup
		into 'build/node'
		finalizedBy deleteOldNpm
	}
	tasks.named("nodeSetup").configure { finalizedBy fixedNode }

	def fixedNpm = tasks.register("fixedNpm", Copy) {
		from npmSetup
		into 'build/node'
	}
	tasks.named("npmSetup").configure { finalizedBy fixedNpm }
}
